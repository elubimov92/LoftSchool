/* ДЗ 6.1 - Асинхронность и работа с сетью */

/**
 * Функция должна создавать посыл, который должен быть решен через секунду секунд после создания
 *
 * @парам {номер} секунды - количество секунд, через которое обещают должен быть решен
 * @возвращение {обещают}
 */
функция delayPromise(секунд) {
  вернуть новое обещание(функция (разрешить, отказать) {
    функции settimeout(функция () {
      решения();
 }, секунды * 1000)
  });
}

/**
 * Функция должна вернуть обещание, который должен быть разрешен массивом городов, загруженным из
 * https://raw.githubusercontent.com/smelukov/citiesTest/master/cities.json
 * Элементы полученного массива должны быть отсортированы по имени города
 *
 * @возвращение {обещание<массив<{name: строка}>>}
 */
функция loadAndSortTowns() {
  вернуть новое обещание(функция (разрешить, отказать) {
    вар xhr-запрос = новый запрос();
    то xhr.открыть("вам", "https://raw.githubusercontent.com/smelukov/citiesTest/master/cities.json");
    то xhr.отправить();
    то xhr.метод addeventlistener('нагрузки', функция () {
      вар сiti = Формат json.в parse(xhr-запрос.responseText);
      сiti.сортировки(функция (А, Б) {
        если (а.имя > б.имя) {
          возвращение 1;
        }
        если (а.имя < б.имя) {
          возвращение -1;
        }
        возврат 0;
      });
      решения(Ситибанк);
    });
  });
}

экспорт {
  delayPromise,
  loadAndSortTowns
};
